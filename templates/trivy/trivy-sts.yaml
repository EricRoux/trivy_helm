{{- if .Values.trivy.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "trivy.name" . }}
  namespace: {{ .Values.namespace }}
  labels:
{{ include "trivy.labels" . | indent 4 }}
    component: trivy
spec:
  replicas: {{ .Values.trivy.replicas }}
  serviceName: {{  template "trivy.name" . }}
  selector:
    matchLabels:
{{ include "trivy.matchLabels" . | indent 6 }}
      component: trivy
  template:
    metadata:
      labels:
{{ include "trivy.labels" . | indent 8 }}
        component: trivy
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/trivy/trivy-secret.yaml") . | sha256sum }}
    spec:
{{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
{{- end }}
      securityContext:
        runAsUser: 10000
        fsGroup: 10000
      containers:
        - name: trivy          
          image: {{ .Values.trivy.image.repository -}} : {{- .Values.trivy.image.tag }}
          imagePullPolicy: {{ .Values.all.image.pullPolicy }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
          env:
            {{- range .Values.config }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            - name: "SCANNER_REDIS_URL"
              valueFrom:
                secretKeyRef:
                  name: {{ template "trivy.name" . }}
                  key: redisURL
            - name: "SCANNER_STORE_REDIS_URL"
              valueFrom:
                secretKeyRef:
                  name: {{ template "trivy.name" . }}
                  key: redisURL
            - name: "SCANNER_JOB_QUEUE_REDIS_URL"
              valueFrom:
                secretKeyRef:
                  name: {{ template "trivy.name" . }}
                  key: redisURL
            - name: SCANNER_API_SERVER_ADDR
              value: ":{{- .Values.trivy.service.port -}}"
          ports:
            - name: api-server
              containerPort: {{ .Values.trivy.service.port }}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /probe/healthy
              port: api-server
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /probe/ready
              port: api-server
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.trivy.resources | indent 12 }}
{{- end }}
