namespace: trivy
nameOverride: trivy
imagePullSecrets:
environments:
  timeZone: "Europe/Moscow"

all:
  image: 
    pullPolicy: IfNotPresent

config:
  - name: "SCANNER_LOG_LEVEL"
    value: "info"
  - name: "SCANNER_TRIVY_CACHE_DIR"
    value: "/home/scanner/.cache/trivy"
  - name: "SCANNER_TRIVY_REPORTS_DIR"
    value: "/home/scanner/.cache/reports"
  - name: "SCANNER_TRIVY_DEBUG_MODE"
    value: false
  - name: "SCANNER_TRIVY_VULN_TYPE"
    value: "os,library"
  - name: "SCANNER_TRIVY_TIMEOUT"
    value: "5m0s"
  - name: "SCANNER_TRIVY_SEVERITY"
    value: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
  - name: "SCANNER_TRIVY_IGNORE_UNFIXED"
    value: false
  - name: "SCANNER_TRIVY_SKIP_UPDATE"
    value: false
  - name: "SCANNER_TRIVY_OFFLINE_SCAN"
    value: true
  - name: "SCANNER_TRIVY_INSECURE"
    value: false
  - name: "SCANNER_TRIVY_REPO"
    value: "ghcr.io/aquasecurity/trivy-db"


trivy:
  enabled: true
  image:
    repository: goharbor/trivy-adapter-photon
    tag: v2.6.0
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
  service:
    type: NodePort
    name: http-trivy
    port: 8080
    protocol: TCP
    nodePort: 30409
    

redis:
  type: internal
  internal:
    automountServiceAccountToken: false
    image:
      repository: goharbor/redis-photon
      tag: v2.6.0

persistence:
  enabled: false
  # persistentVolumeClaim:
  #   redis:
  #     accessMode: ReadWriteOnce
  #     size: 1Gi
  #   trivy:
  #     accessMode: ReadWriteOnce
  #     size: 5Gi